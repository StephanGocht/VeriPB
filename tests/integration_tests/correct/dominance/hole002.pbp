pseudo-Boolean proof version 1.2
* load formula

strict_order exp
    vars
        left u1 u2 u3 u4 u5 u6
        right v1 v2 v3 v4 v5 v6
        aux
    qed

    def
       -32 u1 -16 u2 -8 u3 -4 u4 -2 u5 -1 u6 32 v1 16 v2 8 v3 4 v4 2 v5 1 v6 >= 1 ;
    qed

    irreflexive
    qed

    transitivity
        vars
            fresh_right w1 w2 w3 w4 w5 w6
        qed
        proof
            proofgoal #1
                p 2 3 + 4 +
                c -1
            qed
        qed
    qed
qed

u >= 0 ;
u >= 0 ;
u >= 0 ;
u >= 0 ;
u >= 0 ;
u >= 0 ;


f

load_order exp x1 x2 x3 x4 x5 x6

dom 1 ~x1 1 x4 >= 1 ; x1 x4 , x2 x3 , x3 -> x2 , x4 -> x1 , x5 -> x6 , x6 -> x5

red 1 x4 1 x7 >= 1 ; x7 -> 1

red 1 ~x1 1 x7 >= 1 ; x7 -> 1

red 1 x1 1 ~x4 1 ~x7 >= 1 ; x7 -> 0

dom 1 ~x7 1 ~x2 1 x3 >= 1  ; x1 -> x4 , x2 -> x3 , x3 -> x2 , x4 -> x1 , x5 -> x6 , x6 -> x5 ; begin
    proofgoal #1
        p 17 32 * 18 4 * + 19 +
        u >= 1 ;
        c -1
    qed
qed

red 1 ~x8 1 x7 >= 1 ; x8 -> 0

red 1 ~x8 1 ~x3 1 x2 >= 1 ; x8 -> 0

red 1 ~x2 1 ~x7 1 x8 >= 1 ; x8 -> 1

red 1 x3 1 ~x7 1 x8 >= 1 ; x8 -> 1

dom 1 ~x8 1 ~x5 1 x6 >= 1; x1 -> x4 , x2 -> x3 , x3 -> x2 , x4 -> x1 , x5 -> x6 , x6 -> x5 ; begin
    proofgoal #1
        p 17 32 * 18 4 * + -2 16 * + -3 8 * + -1 +
        u >= 1 ;
        c -1
    qed
qed