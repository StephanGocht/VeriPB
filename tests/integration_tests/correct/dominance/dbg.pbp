pseudo-Boolean proof version 1.2

* load a formula with 10 constraitns
f 10

* define a new order named "simple"
strict_order simple
    vars
        * define "left" variables
        left u1
        * define "right" variables
        * check |left| = |right|
        right v1
        * define auxiliary variables
        * (the list of aux variables is empty)
        aux
    qed

    * define the encoding
    def
        -1 u1 1 v1 >= 1 ;
    qed

    irreflexive
    qed

    transitivity
        vars
            fresh_right w1
        qed
        proof
            proofgoal -1
                p -3 -4 + -1 +
                c -1
            qed
        qed
    qed
qed

load_order simple x1

p 1 2 +
map a3 → 1 ; 1 a3 1 x1 >= 1 ;
    proofgoal 13
        c 14
    qed
qed

dom x1 → x2 , x2 → x1 ; 1 ~x1 1 x2 >= 1 ;
    proofgoal 17
        p 16 18 +
        c 19
    qed
qed

load_order

p 1 2 +